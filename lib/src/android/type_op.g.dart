//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:ddshare_fluttify/src/android/android.export.g.dart';
import 'package:ddshare_fluttify/src/ios/ios.export.g.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_MMessageUtil(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_MMessageUtil',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDTextMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDTextMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_message_BaseResp(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_BaseResp',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_message_BaseReq(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_BaseReq',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMessage(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMessageAct(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDMessageAct',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDFileMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDFileMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD',
      {'refId': ref.refId});
  return result;
}

Future<bool>
    isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_algorithm_MD5(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_algorithm_MD5',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_DDShareApiFactory(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_DDShareApiFactory',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_DDShareApiV2(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_DDShareApiV2',
      {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_android_dingtalk_share_ddsharemodule_ShareConstant(
    Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::isKindOfcom_android_dingtalk_share_ddsharemodule_ShareConstant',
      {'refId': ref.refId});
  return result;
}

Future<com_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck>
    ascom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck>
    ascom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_MMessageUtil>
    ascom_android_dingtalk_share_ddsharemodule_MMessageUtil(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_MMessageUtil',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_MMessageUtil()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDTextMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDTextMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDTextMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDTextMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp>
    ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req>
    ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder>
    ascom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth>
    ascom_android_dingtalk_share_ddsharemodule_message_SendAuth(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendAuth',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendAuth()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp>
    ascom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_BaseResp>
    ascom_android_dingtalk_share_ddsharemodule_message_BaseResp(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_BaseResp',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_BaseResp()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDImageMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDImageMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDImageMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDImageMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth_Req>
    ascom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendAuth_Req()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_BaseReq>
    ascom_android_dingtalk_share_ddsharemodule_message_BaseReq(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_BaseReq',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_BaseReq()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDVideoMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDVideoMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMessageAct>
    ascom_android_dingtalk_share_ddsharemodule_message_DDMessageAct(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDMessageAct',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDMessageAct()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDFileMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDFileMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDFileMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDFileMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD>
    ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDAudioMessage>
    ascom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_message_DDAudioMessage()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_algorithm_MD5>
    ascom_android_dingtalk_share_ddsharemodule_algorithm_MD5(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_algorithm_MD5',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_algorithm_MD5()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_DDShareApiFactory>
    ascom_android_dingtalk_share_ddsharemodule_DDShareApiFactory(
        Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify').invokeMethod(
      'RefClass::ascom_android_dingtalk_share_ddsharemodule_DDShareApiFactory',
      {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_DDShareApiFactory()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_DDShareApiV2>
    ascom_android_dingtalk_share_ddsharemodule_DDShareApiV2(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_DDShareApiV2',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_DDShareApiV2()
    ..refId = result;
}

Future<com_android_dingtalk_share_ddsharemodule_ShareConstant>
    ascom_android_dingtalk_share_ddsharemodule_ShareConstant(Ref ref) async {
  final result = await MethodChannel('com.fluttify/ddshare_fluttify')
      .invokeMethod(
          'RefClass::ascom_android_dingtalk_share_ddsharemodule_ShareConstant',
          {'refId': ref.refId});
  return com_android_dingtalk_share_ddsharemodule_ShareConstant()
    ..refId = result;
}
