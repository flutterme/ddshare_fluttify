//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.ddshare_fluttify;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import androidx.annotation.NonNull;

@SuppressWarnings("ALL")
public class DdshareFluttifyPlugin implements MethodChannel.MethodCallHandler {

    private DdshareFluttifyPlugin(Registrar registrar) {
        this.registrar = registrar;
    }

    private Registrar registrar;

    private final Map<String, Handler> handlerMap = new HashMap<String, Handler>() {{
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::get_mText", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            String result = ref.mText;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mSDKVersion", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            int result = ref.mSDKVersion;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mTitle", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            String result = ref.mTitle;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mContent", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            String result = ref.mContent;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mThumbData", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            byte[] result = ref.mThumbData;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mThumbUrl", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            String result = ref.mThumbUrl;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mUrl", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            String result = ref.mUrl;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::get_mMediaObject", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject result = ref.mMediaObject;
        
            getHEAP().put(result.hashCode(), result);
        
            methodResult.success(result.hashCode());
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::get_mMediaMessage", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage result = ref.mMediaMessage;
        
            getHEAP().put(result.hashCode(), result);
        
            methodResult.success(result.hashCode());
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::get_code", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            String result = ref.code;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::get_state", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            String result = ref.state;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::get_mErrCode", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            int result = ref.mErrCode;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::get_mErrStr", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            String result = ref.mErrStr;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::get_mTransaction", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            String result = ref.mTransaction;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::get_mImageData", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            byte[] result = ref.mImageData;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::get_mImageUrl", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            String result = ref.mImageUrl;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::get_mImagePath", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            String result = ref.mImagePath;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::get_scope", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            String result = ref.scope;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::get_state", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            String result = ref.state;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::get_mTransaction", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            String result = ref.mTransaction;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::get_mUrl", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            String result = ref.mUrl;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::get_mUrl", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            String result = ref.mUrl;
        
        
        
            methodResult.success(result);
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::set_mText", (args, methodResult) -> {
            // jsonable arg
            String mText = (String) args.get("mText");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            ref.mText = mText;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mSDKVersion", (args, methodResult) -> {
            // jsonable arg
            int mSDKVersion = (int) args.get("mSDKVersion");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mSDKVersion = mSDKVersion;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mTitle", (args, methodResult) -> {
            // jsonable arg
            String mTitle = (String) args.get("mTitle");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mTitle = mTitle;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mContent", (args, methodResult) -> {
            // jsonable arg
            String mContent = (String) args.get("mContent");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mContent = mContent;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mThumbData", (args, methodResult) -> {
            // jsonable arg
            byte[] mThumbData = (byte[]) args.get("mThumbData");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mThumbData = mThumbData;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mThumbUrl", (args, methodResult) -> {
            // jsonable arg
            String mThumbUrl = (String) args.get("mThumbUrl");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mThumbUrl = mThumbUrl;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mUrl", (args, methodResult) -> {
            // jsonable arg
            String mUrl = (String) args.get("mUrl");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mUrl = mUrl;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::set_mMediaObject", (args, methodResult) -> {
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject mMediaObject = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get((int) args.get("mMediaObject"));
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            ref.mMediaObject = mMediaObject;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::set_mMediaMessage", (args, methodResult) -> {
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage mMediaMessage = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get((int) args.get("mMediaMessage"));
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            ref.mMediaMessage = mMediaMessage;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::set_code", (args, methodResult) -> {
            // jsonable arg
            String code = (String) args.get("code");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            ref.code = code;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::set_state", (args, methodResult) -> {
            // jsonable arg
            String state = (String) args.get("state");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            ref.state = state;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::set_mErrCode", (args, methodResult) -> {
            // jsonable arg
            int mErrCode = (int) args.get("mErrCode");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            ref.mErrCode = mErrCode;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::set_mErrStr", (args, methodResult) -> {
            // jsonable arg
            String mErrStr = (String) args.get("mErrStr");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            ref.mErrStr = mErrStr;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::set_mTransaction", (args, methodResult) -> {
            // jsonable arg
            String mTransaction = (String) args.get("mTransaction");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            ref.mTransaction = mTransaction;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::set_mImageData", (args, methodResult) -> {
            // jsonable arg
            byte[] mImageData = (byte[]) args.get("mImageData");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            ref.mImageData = mImageData;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::set_mImageUrl", (args, methodResult) -> {
            // jsonable arg
            String mImageUrl = (String) args.get("mImageUrl");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            ref.mImageUrl = mImageUrl;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::set_mImagePath", (args, methodResult) -> {
            // jsonable arg
            String mImagePath = (String) args.get("mImagePath");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            ref.mImagePath = mImagePath;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::set_scope", (args, methodResult) -> {
            // jsonable arg
            String scope = (String) args.get("scope");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            ref.scope = scope;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::set_state", (args, methodResult) -> {
            // jsonable arg
            String state = (String) args.get("state");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            ref.state = state;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::set_mTransaction", (args, methodResult) -> {
            // jsonable arg
            String mTransaction = (String) args.get("mTransaction");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            ref.mTransaction = mTransaction;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::set_mUrl", (args, methodResult) -> {
            // jsonable arg
            String mUrl = (String) args.get("mUrl");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            ref.mUrl = mUrl;
            methodResult.success("success");
        });
        // setter
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::set_mUrl", (args, methodResult) -> {
            // jsonable arg
            String mUrl = (String) args.get("mUrl");
        
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            ref.mUrl = mUrl;
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler::onReq", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseReq var1 = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler ref = (com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler@" + refId + "::onReq(" + var1 + ")");
            }
        
            // invoke native method
            ref.onReq(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler::onResp", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseResp var1 = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler ref = (com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDAPIEventHandler@" + refId + "::onResp(" + var1 + ")");
            }
        
            // invoke native method
            ref.onResp(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::registerApp", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::registerApp(" + var1 + ")");
            }
        
            // invoke native method
            boolean result = ref.registerApp(var1);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::unregisterApp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::unregisterApp(" + "" + ")");
            }
        
            // invoke native method
            ref.unregisterApp();
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::isDDAppInstalled", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::isDDAppInstalled(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDAppInstalled();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::isDDSupportAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::isDDSupportAPI(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDSupportAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::isDDSupportDingAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::isDDSupportDingAPI(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDSupportDingAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::getDDSupportAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::getDDSupportAPI(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getDDSupportAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::openDDApp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::openDDApp(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.openDDApp();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::sendReq", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseReq var1 = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::sendReq(" + var1 + ")");
            }
        
            // invoke native method
            boolean result = ref.sendReq(var1);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.IDDShareApi::sendReqToDing", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseReq var1 = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.IDDShareApi ref = (com.android.dingtalk.share.ddsharemodule.IDDShareApi) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.IDDShareApi@" + refId + "::sendReqToDing(" + var1 + ")");
            }
        
            // invoke native method
            boolean result = ref.sendReqToDing(var1);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.plugin.SignatureCheck::getMD5Signature", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String packageName = (String) args.get("packageName");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.plugin.SignatureCheck::getMD5Signature(" + context + packageName + ")");
            }
        
            // invoke native method
            String result = com.android.dingtalk.share.ddsharemodule.plugin.SignatureCheck.getMD5Signature(context, packageName);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.plugin.DDVersionCheck::getSdkVersionFromMetaData", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            int defaultValue = (int) args.get("defaultValue");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.plugin.DDVersionCheck::getSdkVersionFromMetaData(" + context + defaultValue + ")");
            }
        
            // invoke native method
            int result = com.android.dingtalk.share.ddsharemodule.plugin.DDVersionCheck.getSdkVersionFromMetaData(context, defaultValue);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDTextMessage@" + refId + "::serialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.serialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDTextMessage@" + refId + "::unserialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.unserialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDTextMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDTextMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDTextMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDTextMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDTextMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::setThumbImage", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap bitmap = (android.graphics.Bitmap) getHEAP().get((int) args.get("bitmap"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage@" + refId + "::setThumbImage(" + bitmap + ")");
            }
        
            // invoke native method
            ref.setThumbImage(bitmap);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage ddMediaMessage = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage) getHEAP().get((int) args.get("ddMediaMessage"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder::toBundle(" + ddMediaMessage + ")");
            }
        
            // invoke native method
            android.os.Bundle result = com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder.toBundle(ddMediaMessage);
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage result = com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder.fromBundle(bundle);
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseResp@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseResp@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseResp::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseResp ref = (com.android.dingtalk.share.ddsharemodule.message.BaseResp) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseResp@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDImageMessage@" + refId + "::serialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.serialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDImageMessage@" + refId + "::unserialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.unserialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDImageMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDImageMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDImageMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDImageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDImageMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req ref = (com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseReq@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getType();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::toBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseReq@" + refId + "::toBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.toBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::fromBundle", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseReq@" + refId + "::fromBundle(" + bundle + ")");
            }
        
            // invoke native method
            ref.fromBundle(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseReq@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.BaseReq::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.BaseReq ref = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.BaseReq@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMessage::send", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String receiverPermission = (String) args.get("receiverPermission");
            // jsonable arg
            String action = (String) args.get("action");
            // jsonable arg
            String content = (String) args.get("content");
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMessage::send(" + context + receiverPermission + action + content + bundle + ")");
            }
        
            // invoke native method
            boolean result = com.android.dingtalk.share.ddsharemodule.message.DDMessage.send(context, receiverPermission, action, content, bundle);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage@" + refId + "::serialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.serialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage@" + refId + "::unserialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.unserialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject@" + refId + "::serialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.serialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject@" + refId + "::unserialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.unserialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject ref = (com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.IMediaObject@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage@" + refId + "::serialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.serialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage@" + refId + "::unserialize(" + bundle + ")");
            }
        
            // invoke native method
            ref.unserialize(bundle);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage ref = (com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage@" + refId + "::serialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.serialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage@" + refId + "::unserialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.unserialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDDFriend", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String appId = (String) args.get("appId");
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDDFriend(" + context + appId + bundle + ")");
            }
        
            // invoke native method
            boolean result = com.android.dingtalk.share.ddsharemodule.message.DDMessageAct.sendDDFriend(context, appId, bundle);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDing", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String appId = (String) args.get("appId");
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDing(" + context + appId + bundle + ")");
            }
        
            // invoke native method
            boolean result = com.android.dingtalk.share.ddsharemodule.message.DDMessageAct.sendDing(context, appId, bundle);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDDAuth", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String appId = (String) args.get("appId");
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDMessageAct::sendDDAuth(" + context + appId + bundle + ")");
            }
        
            // invoke native method
            boolean result = com.android.dingtalk.share.ddsharemodule.message.DDMessageAct.sendDDAuth(context, appId, bundle);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDFileMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDFileMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDFileMessage@" + refId + "::serialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.serialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDFileMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDFileMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDFileMessage@" + refId + "::unserialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.unserialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDFileMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDFileMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDFileMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDFileMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDFileMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDFileMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDFileMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDFileMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDFileMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage::serialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage@" + refId + "::serialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.serialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage::unserialize", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage@" + refId + "::unserialize(" + var1 + ")");
            }
        
            // invoke native method
            ref.unserialize(var1);
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage::type", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage@" + refId + "::type(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.type();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage::checkArgs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage@" + refId + "::checkArgs(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.checkArgs();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage::getSupportVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage ref = (com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage@" + refId + "::getSupportVersion(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getSupportVersion();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getMessageDigest", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] bytes = (byte[]) args.get("bytes");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getMessageDigest(" + bytes + ")");
            }
        
            // invoke native method
            String result = com.android.dingtalk.share.ddsharemodule.algorithm.MD5.getMessageDigest(bytes);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getRawDigest", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] bytes = (byte[]) args.get("bytes");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getRawDigest(" + bytes + ")");
            }
        
            // invoke native method
            byte[] result = com.android.dingtalk.share.ddsharemodule.algorithm.MD5.getRawDigest(bytes);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getMD5", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.algorithm.MD5::getMD5(" + var0 + ")");
            }
        
            // invoke native method
            String result = com.android.dingtalk.share.ddsharemodule.algorithm.MD5.getMD5(var0);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiFactory::createDDShareApi", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String appId = (String) args.get("appId");
            // jsonable arg
            boolean needSignatureCheck = (boolean) args.get("needSignatureCheck");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiFactory::createDDShareApi(" + context + appId + needSignatureCheck + ")");
            }
        
            // invoke native method
            com.android.dingtalk.share.ddsharemodule.IDDShareApi result = com.android.dingtalk.share.ddsharemodule.DDShareApiFactory.createDDShareApi(context, appId, needSignatureCheck);
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::registerApp", (args, methodResult) -> {
            // args
            // jsonable arg
            String appId = (String) args.get("appId");
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::registerApp(" + appId + ")");
            }
        
            // invoke native method
            boolean result = ref.registerApp(appId);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::unregisterApp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::unregisterApp(" + "" + ")");
            }
        
            // invoke native method
            ref.unregisterApp();
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::isDDAppInstalled", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::isDDAppInstalled(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDAppInstalled();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::isDDSupportAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::isDDSupportAPI(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDSupportAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::isDDSupportDingAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::isDDSupportDingAPI(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.isDDSupportDingAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::getDDSupportAPI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::getDDSupportAPI(" + "" + ")");
            }
        
            // invoke native method
            int result = ref.getDDSupportAPI();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::openDDApp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::openDDApp(" + "" + ")");
            }
        
            // invoke native method
            boolean result = ref.openDDApp();
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::sendReq", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseReq baseReq = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get((int) args.get("baseReq"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::sendReq(" + baseReq + ")");
            }
        
            // invoke native method
            boolean result = ref.sendReq(baseReq);
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.android.dingtalk.share.ddsharemodule.DDShareApiV2::sendReqToDing", (args, methodResult) -> {
            // args
            // ref arg
            com.android.dingtalk.share.ddsharemodule.message.BaseReq baseReq = (com.android.dingtalk.share.ddsharemodule.message.BaseReq) getHEAP().get((int) args.get("baseReq"));
        
            // ref
            int refId = (int) args.get("refId");
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 ref = (com.android.dingtalk.share.ddsharemodule.DDShareApiV2) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.android.dingtalk.share.ddsharemodule.DDShareApiV2@" + refId + "::sendReqToDing(" + baseReq + ")");
            }
        
            // invoke native method
            boolean result = ref.sendReqToDing(baseReq);
        
            // result
            methodResult.success(result);
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.plugin.SignatureCheck obj = new com.android.dingtalk.share.ddsharemodule.plugin.SignatureCheck();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.plugin.DDVersionCheck obj = new com.android.dingtalk.share.ddsharemodule.plugin.DDVersionCheck();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_MMessageUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_MMessageUtil__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.MMessageUtil obj = new com.android.dingtalk.share.ddsharemodule.MMessageUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDTextMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDTextMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDTextMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDTextMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp obj = new com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__android_os_Bundle", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__android_os_Bundle");
        
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp obj = new com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Resp(bundle);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req obj = new com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__android_os_Bundle", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__android_os_Bundle");
        
            // args
            // ref arg
            android.os.Bundle bundle = (android.os.Bundle) getHEAP().get((int) args.get("bundle"));
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req obj = new com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD.Req(bundle);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder obj = new com.android.dingtalk.share.ddsharemodule.message.DDMediaMessage.Builder();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendAuth__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendAuth obj = new com.android.dingtalk.share.ddsharemodule.message.SendAuth();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp obj = new com.android.dingtalk.share.ddsharemodule.message.SendAuth.Resp();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDImageMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDImageMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__byteArray", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDImageMessage__byteArray");
        
            // args
            // jsonable arg
            byte[] imageData = (byte[]) args.get("imageData");
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDImageMessage(imageData);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__android_graphics_Bitmap", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDImageMessage__android_graphics_Bitmap");
        
            // args
            // ref arg
            android.graphics.Bitmap bitmap = (android.graphics.Bitmap) getHEAP().get((int) args.get("bitmap"));
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDImageMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDImageMessage(bitmap);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendAuth_Req__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req obj = new com.android.dingtalk.share.ddsharemodule.message.SendAuth.Req();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDWebpageMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage obj = new com.android.dingtalk.share.ddsharemodule.message.DDZhiFuBaoMesseage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDVideoMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDVideoMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMessageAct__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDMessageAct__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDMessageAct obj = new com.android.dingtalk.share.ddsharemodule.message.DDMessageAct();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDFileMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDFileMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDFileMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDFileMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD obj = new com.android.dingtalk.share.ddsharemodule.message.SendMessageToDD();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_message_DDAudioMessage__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage obj = new com.android.dingtalk.share.ddsharemodule.message.DDAudioMessage();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_algorithm_MD5__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_algorithm_MD5__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.algorithm.MD5 obj = new com.android.dingtalk.share.ddsharemodule.algorithm.MD5();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_DDShareApiFactory__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_DDShareApiFactory__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.DDShareApiFactory obj = new com.android.dingtalk.share.ddsharemodule.DDShareApiFactory();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_DDShareApiV2__android_content_Context__String__boolean", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_DDShareApiV2__android_content_Context__String__boolean");
        
            // args
            // ref arg
            android.content.Context context = (android.content.Context) getHEAP().get((int) args.get("context"));
            // jsonable arg
            String appId = (String) args.get("appId");
            // jsonable arg
            boolean needSignatureCheck = (boolean) args.get("needSignatureCheck");
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.DDShareApiV2 obj = new com.android.dingtalk.share.ddsharemodule.DDShareApiV2(context, appId, needSignatureCheck);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_ShareConstant__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_android_dingtalk_share_ddsharemodule_ShareConstant__");
        
            // args
        
        
            // create target object
            com.android.dingtalk.share.ddsharemodule.ShareConstant obj = new com.android.dingtalk.share.ddsharemodule.ShareConstant();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
    }};

    public static void registerWith(Registrar registrar) {
        MethodChannel channel = new MethodChannel(registrar.messenger(), "com.fluttify/ddshare_fluttify");
        channel.setMethodCallHandler(new DdshareFluttifyPlugin(registrar));

        // register platform view
        
    }

    @Override
    public void onMethodCall(@NonNull MethodCall methodCall, @NonNull MethodChannel.Result methodResult) {
        Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
        Handler handler = handlerMap.get(methodCall.method);
        if (handler != null) {
            try {
                handler.call(args, methodResult);
            } catch (Exception e) {
                e.printStackTrace();
                methodResult.error(e.getMessage(), null, null);
            }
        } else {
            methodResult.notImplemented();
        }
    }

    @FunctionalInterface
    interface Handler {
        void call(Map<String, Object> args, MethodChannel.Result methodResult) throws Exception;
    }
}
